#include <WiFi.h>
#include <WebSocketsClient.h>
#include <driver/i2s.h>

#define I2S_WS 5
#define I2S_SD 2
#define I2S_SCK 22
#define SAMPLE_RATE 16000
#define BUFFER_SIZE 1024  // Buffer lưu âm thanh

const char* ssid = "DLM";  // Thay bằng WiFi của bạn
const char* password = "datloimai0008";
const char* SERVER_IP = "192.168.2.3";  // Địa chỉ IP của Flask server
const int SERVER_PORT = 5000;             // Cổng Flask server

WebSocketsClient webSocket;

void setupI2S() {
  i2s_config_t i2s_config = {
    .mode = i2s_mode_t(I2S_MODE_MASTER | I2S_MODE_RX),
    .sample_rate = SAMPLE_RATE,
    .bits_per_sample = I2S_BITS_PER_SAMPLE_32BIT,
    .channel_format = I2S_CHANNEL_FMT_ONLY_LEFT,
    .communication_format = I2S_COMM_FORMAT_I2S,
    .intr_alloc_flags = ESP_INTR_FLAG_LEVEL1,
    .dma_buf_count = 8,
    .dma_buf_len = 64
  };

  i2s_pin_config_t pin_config = {
    .bck_io_num = I2S_SCK,
    .ws_io_num = I2S_WS,
    .data_out_num = I2S_PIN_NO_CHANGE,
    .data_in_num = I2S_SD
  };

  i2s_driver_install(I2S_NUM_0, &i2s_config, 0, NULL);
  i2s_set_pin(I2S_NUM_0, &pin_config);
  i2s_set_clk(I2S_NUM_0, SAMPLE_RATE, I2S_BITS_PER_SAMPLE_32BIT, I2S_CHANNEL_MONO);
}

void setupWiFi() {
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected!");
}

void setupWebSocket() {
  webSocket.begin("ws://" server_host, server_port, "/");
  webSocket.onEvent([](WStype_t type, uint8_t* payload, size_t length) {
    if (type == WStype_CONNECTED) {
      Serial.println("WebSocket connected!");
    } else if (type == WStype_DISCONNECTED) {
      Serial.println("WebSocket disconnected!");
    }
  });
}

void setup() {
  Serial.begin(115200);
  setupI2S();
  setupWiFi();
  setupWebSocket();
}

void loop() {
  char i2s_buffer[BUFFER_SIZE];
  size_t bytes_read;

  i2s_read(I2S_NUM_0, &i2s_buffer, BUFFER_SIZE, &bytes_read, portMAX_DELAY);

  if (bytes_read > 0) {
    webSocket.sendBIN((uint8_t*)i2s_buffer, bytes_read);
  }

  webSocket.loop();
  delay(10);  // Tránh gửi quá nhanh
}
